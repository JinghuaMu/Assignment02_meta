y = "Fisher's Z-transformed Correlation Coefficient (Zr)", size = "Precision (1/SE)") +
geom_hline(yintercept = 0,col = "blue", linetype = 2)+
theme_light()
ggplot(meta_RR, aes(y = abs_lnRR, x = year_online, size = 1/sqrt(VRR))) + geom_boxplot(aes(group = year_online)) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "Fisher's Z-transformed Correlation Coefficient (Zr)", size = "Precision (1/SE)") +
geom_hline(yintercept = 0,col = "blue", linetype = 2)+ coord_cartesian(ylim = c(0, 8))+
stat_summary(fun="mean", geom="point", shape=20, size=2.5, color="blue", fill="blue",alpha=0.7) +
theme_classic()
meta_RR <- meta_RR %>% mutate(year_c = year_online - mean(year_online))
metareg_time <- metafor::rma.mv(abs_lnRR ~ year_c, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_time
meta_RR <- meta_RR %>% mutate(year_c = year_online - mean(year_online))
metareg_time <- metafor::rma.mv(lnRR ~ year_c, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_time
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
metareg_publish_abs <- metafor::rma.mv(lnRR ~ year_c + precision, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% filter(precision < quantile(meta_RR$precision,0.99)))
metareg_publish_abs
metareg_publish_abs <- metafor::rma.mv(lnRR ~ year_c + precision, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% filter(precision < quantile(meta_RR$precision,0.99)))
metareg_publish_abs
round(metareg_publish_abs $ci.lb,3)
round(metareg_time $ci.lb,3)
R22 <- as.data.frame(orchaRd::r2_ml(metareg_v))
R22 <- cbind(R2,as.data.frame(orchaRd::r2_ml(metareg_year)))
R22 <- as.data.frame(orchaRd::r2_ml(metareg_v))
R22 <- cbind(R2,as.data.frame(orchaRd::r2_ml(metareg_time)))
R22 <- cbind(R2,as.data.frame(orchaRd::r2_ml(metareg_publish_abs)))
colnames(R22) <- c("precision","year","year+precision")
R22
R22 <- as.data.frame(orchaRd::r2_ml(metareg_v))
R22 <- cbind(R22,as.data.frame(orchaRd::r2_ml(metareg_time)))
R22 <- cbind(R22,as.data.frame(orchaRd::r2_ml(metareg_publish_abs)))
colnames(R22) <- c("precision","year","year+precision")
R22
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(average_n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 2)
study2 <-  study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study1/study2 + plot_layout(height = c(2, 1))
metareg_if <- metafor::rma.mv(lnRR ~ pub_year_if, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_if
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species), mean_lnRR = mean(lnRR)), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage) %>% distinct()
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), mean_lnRR = mean(lnRR), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(average_n,precision,mean_lnRR),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 2)
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), mean_lnRR = mean(lnRR), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage,mean_lnRR) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(average_n,precision,mean_lnRR),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 2)
study2 <-  study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(average_n,precision,mean_lnRR),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 2)
study1
study2 <-  study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(average_n,precision,mean_lnRR),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3)
study1
study2 <-  study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study1 <- study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,average_n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3)
study1
study2 <-  study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,average_n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3)
study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2)
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), mean_lnRR = mean(lnRR), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage,mean_lnRR) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
metareg_if <- metafor::rma.mv(abs_lnRR ~ year_c + precision + pub_year_if, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_if
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c + precision*pub_year_if, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c*pub_year_if+ precision , V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c + pub_year_if + precision , V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot1 <- plot_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR")
}
para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors"))
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot1 <- plot_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR")
}
print(para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors")))
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot_data
}
para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors")) %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR")
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot_data
}
para_data <- para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors"))
para_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR")
## Calculate I2
library(orchaRd)
i2_vals <- orchaRd::i2_ml(MLMA)
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR ~ 1, V = VRR, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
as.numeric(i2[i2$type == "Study/cue_stimulus_type","I2"]
as.numeric(i2[[i2$type == "Study/cue_stimulus_type/species","I2"]])
i2[[i2$type == "Study/cue_stimulus_type/species","I2"]]
s.numeric(i2[i2$type == "Study/cue_stimulus_type","I2"]
s.numeric(i2[i2$type == "Study/cue_stimulus_type","I2"]
as.numeric(i2[i2$type == "Study/cue_stimulus_type","I2"]
)
as.numeric(i2[i2$type == "Study/cue_stimulus_type/species","I2"])
View(MLMR1)
sum(precision_num[3,3],precision_num[4,3])
precision_num[4,2]
precision_num <- meta_RR %>% count(across(exact)) %>% mutate(ratio = round(n/nrow(meta_RR),3))
precision_num
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>% ggplot(aes(x = 1,y = value)) + geom_violin() +geom_jitter(alpha = 0.3,aes(color = measure_change))+ facet_wrap(~type, scale = "free")
100*R22[3,1]
R22
R22[3]
R22[3,1]
R22[,1]
R22[1,3]
metareg_v <- metafor::rma.mv(lnRR ~ inverse_VRR, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_VRR = 1/VRR) %>% filter(inverse_VRR <= quantile(inverse_VRR, 0.99)))
metareg_v
metareg_v <- metafor::rma.mv(lnRR ~ inverse_VRR, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_VRR = 1/VRR) %>% filter(inverse_VRR <= quantile(inverse_VRR, 0.95)))
metareg_v
metafor::funnel(x = meta_RR$lnRR, vi = meta_RR$VRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("#e9fbff", "#dcf0ef", "#bac8cc"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Correlation Coefficient (r)", atransf = exp, legend = TRUE, pch =20)
meta_RR %>% ggplot(aes(x = avarage_n, y = abs_lnRR))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR)) + geom_point()
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, fill = precision)) + geom_point()
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = precision)) + geom_point()
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = precision)) + geom_point() + scale_fill_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = precision)) + geom_point() + scale_fill_gradientn(colours = heat.colors(20))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = precision)) + geom_point() + scale_fill_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_fill_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_fill_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(20))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(100))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(5))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(10))
meta_RR %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(20))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.98)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(20))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = sqrt(VRR))) + geom_point() + scale_color_gradientn(colours = heat.colors(20))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_color_gradientn(colours = heat.colors(20))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_color_gradientn(colours = terrain.colors(10))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_color_gradientn(colours = topo.colors(10))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_color_gradientn(colours = topo.colors(10))
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>% ggplot(aes(x = 1,y = value)) + geom_violin() +geom_jitter(alpha = 0.3,aes(color = measure_change))+ facet_wrap(~type, scale = "free") + xlab(NULL)
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>% ggplot(aes(x = 1,y = value)) + geom_violin() +geom_jitter(alpha = 0.3,aes(color = measure_change))+ facet_wrap(~type, scale = "free") + xlab(NULL) + xlim(NULL)
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>% ggplot(aes(x = 1,y = value)) + geom_violin() +geom_jitter(alpha = 0.3,aes(color = measure_change))+ facet_wrap(~type, scale = "free") + xlab(NULL)
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR") + + plot_annotation(
title = "Q-Q plot of mean lnRR for all experimental factors")
}
para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors"))
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR") +  plot_annotation(
title = "Q-Q plot of mean lnRR for all experimental factors")
}
para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors"))
meta_RR %>% ggplot(aes(sample = lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~effect_type,scale = "free") +  plot_annotation(
title = "Q-Q plot of lnRR for three different study effect types")
study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,average_n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3) +  plot_annotation(
title = "Distribution of other research characteristics in different IF intervals")
study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2) +  plot_annotation(
title = "Count of method and species usage in different IF interval")
# install packages
library(pacman)
p_load(tidyverse, flextable, metafor, janitor, ggpmisc, patchwork)
# Install the orchaRd package
## devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
#read the data of Ckark's research and conceal the index column
current_res <- read_csv("OA_activitydat_20190302_BIOL3207.csv",name_repair = "unique",show_col_types = FALSE) %>%
select(-1)
#show context
head(current_res,3)
# Change some variables to factor to check that the content is correct
current_res <- current_res %>% mutate(loc = as.factor(loc),species = as.factor(species),
size = as.factor(size),treatment = as.factor(treatment))
summary(current_res)
#Check the distribution of NA in the dataset
current_res %>% summarise(across(everything(), ~sum(is.na(.))))
#Check whether the number of NA values affects data availability
table(current_res[!complete.cases(current_res$activity),] %>% select(species,loc))
#Remove missing values
current_res <- current_res[complete.cases(current_res$activity),]
# the path of metadata file to append new infomation
append_path = "ocean_meta_data.csv"
existing_res <- read_csv(append_path,show_col_types = FALSE)
# Get the amount of information we need
glimpse(existing_res)
# Modify our treatment names to match the reference documentation
levels(current_res$treatment)[levels(current_res$treatment)=="control"] <- "ctrl"
levels(current_res$treatment)[levels(current_res$treatment)=="CO2"] <- "oa"
# calculate mean,SD and N of activity across each species and treatment
current_sta <- current_res %>% group_by(treatment,species) %>% summarise(mean = mean(activity),sd = sd(activity),n = n(),.groups = "drop") %>%
pivot_wider(names_from = treatment,names_glue = "{treatment}.{.value}",values_from = c(mean,n,sd))
# the path of supplemental information about clark's research
current_info <- read_csv("clark_paper_data.csv",show_col_types = FALSE)
# using cbind() to extend supplemental information to each experimental group
append_info <- cbind(tibble(current_info),current_sta)
# colnames(append_info)
#Fix problem with the order and partial naming of columns was found
append_info <- append_info %>%rename(Species = species) %>% select(colnames(existing_res))
# write_lines("",file = append_path,append = TRUE)
# write_csv(append_info, file = append_path, append = TRUE,col_names = FALSE)
rm(list = ls())
# Use *janitor* to fix column names for easy selection
meta_data <- read_csv("ocean_meta_data.csv",show_col_types = FALSE) %>% janitor::clean_names()
ini_size = nrow(meta_data)
# Some numeric variables are read in chr type, cheack the non-numeric element
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
#Correct "-" to NA by forced type conversion. Correct some variables to factor type
meta_data[meta_data == "-"] <- NA
meta_data$cue_stimulus_type[is.na(meta_data$cue_stimulus_type)] <- "None"
meta_data <- meta_data %>% mutate(pub_year_if = as.numeric(pub_year_if), x2017_if = as.numeric(x2017_if),
effect_type = as.factor(effect_type), climate_fish_base = as.factor(climate_fish_base),
env_cue_stimulus = as.factor(env_cue_stimulus), cue_stimulus_type = as.factor(cue_stimulus_type),
species = as.factor(species))
# Check the dataset again
summary(meta_data)
meta_RR <- metafor::escalc(measure = "ROM", data = meta_data,m1i = oa_mean, m2i = ctrl_mean,
sd1i = oa_sd, sd2i = ctrl_sd,n1i = oa_n, n2i = ctrl_n,var.names = c("lnRR", "VRR"))
# Most of NA has *change/rate* in behavioural_metric
meta_RR[!complete.cases(meta_RR$lnRR),] %>% select(study,behavioural_metric, ctrl_mean,oa_mean,lnRR)
# get all the study id of NA values
doubtful_study <- unique(meta_RR[!complete.cases(meta_RR$lnRR),]$study)
# number of experiments matched keyword in doubtful study
num_match <- meta_data %>% filter(study %in% doubtful_study) %>%
filter(grepl("change|Change|rate|Rate",behavioural_metric)) %>% nrow()
# number of experiments of all study including NA value
num_in_study <- meta_data %>% filter(study %in% doubtful_study) %>% nrow()
print(paste("Num of rows matching keywords:",num_match,",Num of experiments:",num_in_study))
# Remove NA and mark  experiment with change or in "doubtful study"
meta_RR <- meta_RR %>%  filter(!is.na(lnRR)) %>%
mutate(measure_change = (study %in% doubtful_study)|grepl("change|Change",behavioural_metric) )
# plot distribution of lnRR and VRR
meta_RR %>% select(lnRR, VRR) %>% pivot_longer(cols = lnRR:VRR, names_to = "type", values_to = "value") %>%
ggplot(aes(x = 1,y = value)) + geom_violin() + facet_wrap(~type, scale = "free")
# filter unreliable(have unreliable sampling variance) experiments
meta_RR %>% filter( (sqrt(VRR) > 2*abs(lnRR)) & (sqrt(VRR)> log(1.5) )) %>% select(study,ctrl_n:VRR) %>% head(10)
# delete unreliable(have unreliable sampling variance) experiments
meta_RR <- meta_RR %>% filter((sqrt(VRR) <= 2*abs(lnRR)) | (sqrt(VRR) <= log(1.5) ))
print(paste("Initial number of experiment:",ini_size,",after screen:",nrow(meta_RR)))
# Write the processed file to a csv file
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>% ggplot(aes(x = 1,y = value)) + geom_violin() +geom_jitter(alpha = 0.3,aes(color = measure_change))+ facet_wrap(~type, scale = "free") + xlab(NULL) + plot_annotation(
title = "Distribution of lnRR and VRR after sample deletion")
meta_RR %>% mutate(sd_lnRR = sqrt(VRR)) %>% select(lnRR, sd_lnRR, measure_change) %>% pivot_longer(cols = c(lnRR,sd_lnRR), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free")
# Read processed meta-analysis data
meta_RR <- read_csv("meta_RR.csv", show_col_types = FALSE)
# Fix a UTF-8 encoded label of species
meta_RR$species[grepl("Hippocampus",meta_RR$species)] = "Hippocampus guttulatus"
#draw fig4.1
meta_RR %>% group_by(study) %>%
summarise(n_climate = length(unique(climate_fish_base)), n_species = length(unique(species)), n_life_stage = length(unique(life_stage)),n_stimulus= length(unique(cue_stimulus_type))) %>%
pivot_longer(cols = -1,names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_histogram(binwidth = 1) + geom_text(aes(label=as.character(..count..)),stat="bin",binwidth=1,vjust=-0.5) +
facet_wrap(~type,scale = "free",nrow = 1)
meta_RR %>% group_by(species) %>%
summarise(n_study = length(unique(study)), n_life_stage = length(unique(life_stage)),n_stimulus= length(unique(cue_stimulus_type))) %>%
pivot_longer(cols = -1,names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_histogram(binwidth = 1) + geom_histogram(binwidth = 1) + geom_text(aes(label=as.character(..count..)),stat="bin",binwidth=1,vjust=-0.5) +
facet_wrap(~type,scale = "free")
meta_RR %>% ggplot(aes(sample = lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~effect_type,scale = "free") +  plot_annotation(
title = "Q-Q plot of lnRR for three different study effect types")
para_distribution <- function(data,paras){
plot_data <- tibble()
for (i in paras){
c <- ensym(i)
para_data <- data %>% group_by({{c}}) %>% summarise(mean_lnRR = mean(lnRR)) %>%
select(mean_lnRR) %>% mutate(parameter = as.character(i))
plot_data <- rbind(para_data,plot_data)
}
plot_data %>% ggplot(aes(sample = mean_lnRR)) + stat_qq() + stat_qq_line() + facet_wrap(~parameter,scale = "free") + ylab("mean of abslute lnRR") +  plot_annotation(
title = "Q-Q plot of mean lnRR for all experimental factors")
}
para_distribution(meta_RR,c("species","study","climate_fish_base","cue_stimulus_type","year_online","authors"))
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR ~ 1, V = VRR, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
summary(MLMA)
p_MLMA <- predict(MLMA, transf = exp)
p_MLMA
## Calculate I2
library(orchaRd)
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = round(i2_vals,4))
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
# Multi-level meta-analytic model
meta_RR <- meta_RR %>% mutate(abs_lnRR = abs(lnRR))
MLMA2 <- metafor::rma.mv(abs_lnRR ~ 1, V = VRR, method = "REML",
random = list(~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
MLMA2
## Calculate I2
library(orchaRd)
i2_vals <- orchaRd::i2_ml(MLMA2)
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = round(i2_vals,4))
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
orchaRd::orchard_plot(MLMA, mod = "1", group = "study", data = meta_RR,
xlab = "log(Response ratio) (lnRR) across all studies", angle = 45)
# Experiments didn't mark habitats were remove
meta_RR_climate <- meta_RR %>% filter(climate_fish_base != "Not provided")
MLMR1 <- metafor::rma.mv(lnRR ~ climate_fish_base-1, V = VRR, method = "REML",
random = list(~1|species, ~1|study/exp_id),
dfs = "contain", test = "t", data = meta_RR_climate)
MLMR1
orchaRd::orchard_plot(MLMR1, mod = "climate_fish_base", group = "study", data = meta_RR_climate,
xlab = "log(Response ratio) (lnRR)", angle = 45)
rm(meta_RR_climate)
# Experiments didn't mark life stage were remove
meta_RR_stage <- meta_RR %>% filter(life_stage != "Not provided")
MLMR2 <- metafor::rma.mv(lnRR ~ life_stage -1, V = VRR, method = "REML",
random = list(~1|species, ~1|study/exp_id),
dfs = "contain", test = "t", data = meta_RR_stage)
MLMR2
orchaRd::orchard_plot(MLMR2, mod = "life_stage", group = "study", data = meta_RR_stage,
xlab = "log(Response ratio) (lnRR)", angle = 45)
rm(meta_RR_stage)
# Experiments didn't mark climate and life stage were remove
meta_RR_cs <- meta_RR %>% filter(life_stage != "Not provided" & climate_fish_base != "Not provided")
MLMR3 <- metafor::rma.mv(abs_lnRR ~ climate_fish_base + life_stage -1, V = VRR, method = "REML",
random = list(~1|species, ~1|study/exp_id),
dfs = "contain", test = "t", data = meta_RR_cs)
MLMR3
R2 <- as.data.frame(orchaRd::r2_ml(MLMR1))
R2 <- cbind(R2,as.data.frame(orchaRd::r2_ml(MLMR2)))
R2 <- cbind(R2,as.data.frame(orchaRd::r2_ml(MLMR3)))
colnames(R2) <- c("climate","life stage","climate + life stage")
R2
#Calculate the average lnRR and sample size grouped by habitat and life stage
heat_data <- meta_RR_cs %>% group_by(climate_fish_base, life_stage) %>%
summarise(mean_abs_lnRR = mean(abs_lnRR), n_sam = n(), .groups = "drop") %>% filter(n_sam > 10) %>%
mutate(heat_label = paste("n =",n_sam,"\n",round(mean_abs_lnRR,3)))
heat_data %>% ggplot(aes(x= climate_fish_base ,y= life_stage,fill= mean_abs_lnRR, label = heat_label)) + geom_tile() + geom_text() + scale_fill_gradient2(low = "white", high = "red") + xlab("climate") + ylab("life stage") + labs(fill = "mean(abs(lnRR))")
heat_data %>% ggplot(aes(x = mean_abs_lnRR, y = n_sam)) + geom_smooth(method = "lm") + geom_point() + xlab("Mean(abs(lnRR)) for each block in heatmap") + ylab("Mean sample size")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + scale_color_gradientn(colours = topo.colors(10))
# use case_when() to divide samples into groups
meta_RR <- meta_RR %>% mutate(precision = 1/sqrt(VRR)) %>%  mutate(
exact = case_when(
precision < 5 ~ "low",
precision >= 5 & precision < 30 ~ "normal",
precision >= 30 & precision < 500 ~ "exact",
precision >= 500 ~ "extra_exact",
)) %>% mutate(exact = fct_relevel(as.factor(exact),"low","normal","exact"))
meta_RR %>% ggplot(aes(y = precision, x = lnRR)) + geom_point() + facet_wrap(~exact, scale = "free")
precision_num <- meta_RR %>% count(across(exact)) %>% mutate(ratio = round(n/nrow(meta_RR),3))
precision_num
metafor::funnel(x = meta_RR$lnRR, vi = meta_RR$VRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("#e9fbff", "#dcf0ef", "#bac8cc"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Correlation Coefficient (r)", atransf = exp, legend = TRUE, pch =20)
library(ggpmisc)
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_lnRR, x = VRR, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic()
}
# NULL means not to apply different colors to the two measurements of the data
meta_RR %>% filter(VRR < quantile(meta_RR$VRR,0.95)) %>% anti_funnel(NULL)
meta_RR %>% filter(VRR < quantile(meta_RR$VRR,0.95)) %>% anti_funnel(measure_change)
metareg_v <- metafor::rma.mv(lnRR ~ inverse_VRR, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_VRR = 1/VRR) %>% filter(inverse_VRR <= quantile(inverse_VRR, 0.95)))
metareg_v
ggplot(meta_RR, aes(y = lnRR, x = year_online, size = 1/sqrt(VRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "Fisher's Z-transformed Correlation Coefficient (Zr)", size = "Precision (1/SE)") +
geom_hline(yintercept = 0,col = "blue", linetype = 2)+
theme_light()
ggplot(meta_RR, aes(y = abs_lnRR, x = year_online, size = 1/sqrt(VRR))) + geom_boxplot(aes(group = year_online)) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "Fisher's Z-transformed Correlation Coefficient (Zr)", size = "Precision (1/SE)") +
geom_hline(yintercept = 0,col = "blue", linetype = 2)+ coord_cartesian(ylim = c(0, 8))+
stat_summary(fun="mean", geom="point", shape=20, size=2.5, color="blue", fill="blue",alpha=0.7) +
theme_classic()
meta_RR <- meta_RR %>% mutate(year_c = year_online - mean(year_online))
metareg_time <- metafor::rma.mv(lnRR ~ year_c, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_time
metareg_publish <- metafor::rma.mv(lnRR ~ year_c + precision, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% filter(precision < quantile(meta_RR$precision,0.99)))
metareg_publish
R22 <- as.data.frame(orchaRd::r2_ml(metareg_v))
R22 <- cbind(R22,as.data.frame(orchaRd::r2_ml(metareg_time)))
R22 <- cbind(R22,as.data.frame(orchaRd::r2_ml(metareg_publish)))
colnames(R22) <- c("precision","year","year+precision")
R22
study_info <- meta_RR %>% group_by(study) %>% mutate(mean_VRR = mean(VRR), species_usage = length(unique(species)), mean_lnRR = mean(lnRR), method_usage = length(unique(cue_stimulus_type))) %>% ungroup() %>%  select(study,year_online, pub_year_if,mean_VRR, effect_type, average_n, species_usage, method_usage,mean_lnRR) %>% distinct()
study_info <- study_info %>% mutate(if_range = c("0-20%","20-40%","40-60%","60-80%","80-100%")[findInterval(study_info$pub_year_if,c(0,quantile(study_info$pub_year_if,0.2,T),quantile(meta_RR$pub_year_if,0.4,T),quantile(study_info$pub_year_if,0.6,T),quantile(study_info$pub_year_if,0.8,T),100),all.inside = T)] )
study_info %>% drop_na() %>%
ggplot(aes(x= if_range,fill=effect_type)) + geom_bar(aes(color=effect_type), position = "fill")+scale_y_continuous(labels = scales::percent)
study_info %>% drop_na() %>% mutate(precision = 1/sqrt(mean_VRR)) %>% pivot_longer(c(mean_lnRR,average_n,precision),names_to = "trait", values_to = "value") %>%
ggplot(aes(y= if_range,x = value)) + geom_boxplot() + facet_wrap(~trait,scale = "free",nrow = 3) +  plot_annotation(
title = "Distribution of other research characteristics in different IF intervals")
study_info %>% drop_na() %>% pivot_longer(c(species_usage,method_usage),names_to = "trait", values_to = "value") %>% ggplot(aes(y= if_range,x = value)) + geom_count() + facet_wrap(~trait,scale = "free",ncol = 2) +  plot_annotation(
title = "Count of method and species usage in different IF interval")
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c + pub_year_if + precision , V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = smooth) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth() + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylim(-0.5,15)
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylim(-0.2,15)
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c + pub_year_if + precision + average_n, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all <- metafor::rma.mv(abs_lnRR ~ year_c + pub_year_if + average_n, V = VRR, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR)
metareg_all
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm, aes(color = purple)) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm, aes(color = "purple")) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_lnRR, color = VRR)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)")
# use case_when() to divide samples into groups
meta_RR <- meta_RR %>% mutate(precision = 1/sqrt(VRR)) %>%  mutate(
exact = case_when(
precision < 5 ~ "low",
precision >= 5 & precision < 30 ~ "normal",
precision >= 30 & precision < 500 ~ "exact",
precision >= 500 ~ "extra_exact",
)) %>% mutate(exact = fct_relevel(as.factor(exact),"low","normal","exact"))
meta_RR %>% ggplot(aes(y = precision, x = lnRR)) + geom_point() + facet_wrap(~exact, scale = "free") plot_annotation(
View(study_info)
View(meta_RR)
View(meta_RR)
View(meta_RR)
meta_RR <- read_csv("meta_RR.csv", show_col_types = FALSE)
View(meta_RR)
